import asyncio
import config
import keyboards
from aiogram import Bot, Dispatcher, types , F
from aiogram.filters import Command
# from aiogram.filters import CommandObject
import logging
import random
import requests
from datetime import datetime
# from aiogram.utils import executor
# import aiohttp

logging.basicConfig(level=logging.INFO)

bot = Bot(token= config.ton, parse_mode='HTML')
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é üòä, {message.from_user.full_name}!')
    await asyncio.sleep(1)
    await message.answer('–Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –ø–æ –∏–º–µ–Ω–∏ –ú–µ—Ö–∞–∏–ª–∞ –ü—Ä–∏–º–∞!)')
    await asyncio.sleep(2)
    await message.answer('–°—Ç—Ä–∞–Ω–Ω–æ–µ –∏–º—è, –Ω–æ —É–≤–µ—Ä—è—é, –æ–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç –¥–≤—É—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö —Å–ª–æ–≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞: mechanic (–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π) –∏ AI (–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç). –ü—Ä–∏–º–∞ –∂–µ –Ω–∞ –ª–∞—Ç—ã–Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ "–ü–µ—Ä–≤–∞—è"')
    await asyncio.sleep(2)
    await message.answer('–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ —á—É—Ç—å-—á—É—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ –º–æ–∂–µ–º –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –º–æ–∏–º –æ—Å–Ω–æ–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º üòå', reply_markup=keyboards.keyboard1)

@dp.message(Command("about_me"))
async def cmd_aboutme(message: types.Message):
    await message.reply('–Ø –±—ã–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞ –≤ –º–∞–µ 2024 –≥–æ–¥–∞. –ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –Ω–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∏ –Ω–∞ –º–µ–Ω—è –æ–Ω —Ç—Ä–∞—Ç–∏–ª —Å–≤–æ–µ –¥—Ä–∞–≥–∞—Ü–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è... –•–æ—Ç—è –º–æ–≥ –±—ã –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å, –ø–æ—Å–ª–µ —Ç—è–∂–µ–ª–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –Ω–∞ –∑–∞–≤–æ–¥–µ')
    await asyncio.sleep(3)
    await message.reply('–ú–æ–π –∫–æ–¥ –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python. –û—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–ª—å—é –º–æ–µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª—É–∂–∏–ª–∞ –∏—Ç–æ–≥–æ–≤–∞—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —á–∞—Ç-–±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ.')
    await asyncio.sleep(2)
    await message.reply('–í –ø—Ä–∏–Ω—Ü–∏–ø–µ –Ω–∞–≤–µ—Ä–Ω–æ–µ —ç—Ç–æ –≤—Å–µ, —á—Ç–æ —è —Ö–æ—Ç–µ–ª–∞ –±—ã –Ω–∞–ø–∏—Å–∞—Ç—å. –ü–µ—Ä–µ–π–¥–µ–º –∫ –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º?)', reply_markup=keyboards.keyboard2)

@dp.message(Command("functions"))
async def cmd_functions(message: types.Message):
    await message.reply('–Ø –º–æ–≥—É —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –≤—Å–µ –∂–µ: 1. –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç)')
    await message.reply('2. –ú–æ–≥—É —Å–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è')
    await message.reply('3. –ú–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ')
    await message.reply('4. –ú–æ–≥—É —Å–∫–∏–Ω—É—Ç—å —Å–º–µ—à–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É', reply_markup=keyboards.keyboard3)

jokes = [
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ —Ö–æ–¥—è—Ç –ø–æ –ª–µ—Å—É? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –±–æ—è—Ç—Å—è –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –±–∞–≥–æ–≤.",
    "–°–∫–æ–ª—å–∫–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É? –ù–∏ –æ–¥–Ω–æ–≥–æ, —ç—Ç–æ –∞–ø–ø–∞—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞.",
    "–ß—Ç–æ —Å–∫–∞–∑–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç —Å–≤–æ–µ–π –∂–µ–Ω–µ? –ù–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–±—ä—è—Å–Ω—è—Ç—å, –ø—Ä–æ—Å—Ç–æ –±—É–¥—å –≥–æ—Ç–æ–≤–∞ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç."
]

@dp.message(Command('fun'))
async def fun(message: types.Message):
    await message.reply(random.choice(jokes))

@dp.message(Command('time'))
async def send_time(message: types.Message):
    now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    await message.reply(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {now}")

@dp.message(Command('weather'))
async def send_weather(message: types.Message):
    city = "Moscow"
    api_key = "YOUR_OPENWEATHER_API_KEY"
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
    response = requests.get(url)
    data = response.json()
    if data["cod"] == 200:
        weather = data["weather"][0]["description"]
        temp = data["main"]["temp"]
        await message.reply(f"–ü–æ–≥–æ–¥–∞ –≤ {city}: {weather}, {temp}¬∞C")
    else:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@dp.message(Command('send_photo'))
async def send_photo(message: types.Message):
    # URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    photo_url = 'https://w.forfun.com/fetch/5d/5d572d697e41c82ac511549420ebcf44.jpeg'
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
    await bot.send_photo(message.chat.id, photo_url, caption="–í–æ—Ç –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")


@dp.message(Command("info"))
async def cmd_info(message: types.Message):
    number = random.randint(1, 7)
    await message.answer("–Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç")
    await message.answer(f"–¢–≤–æ—ë —á–∏—Å–ª–æ {number}")

async def main():
    await dp.start_polling(bot)
if __name__ == '__main__':
    asyncio.run(main())
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
# –ù–ï –†–ê–ë–û–¢–ê–ï–¢. –¢–†–ï–ë–£–ï–¢ –í–ü–ù
# @dp.message(Command('send_photo'))
# async def send_photo(message: types.Message):
#     # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
#     random_image_url = 'https://picsum.photos/200/300'

#     async with aiohttp.ClientSession() as session:
#         async with session.get(random_image_url) as resp:
#             if resp.status == 200:
#                 photo_url = str(resp.url)
#                 await bot.send_photo(message.chat.id, photo_url, caption="–í–æ—Ç –≤–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")

# @dp.message(F.text)
# async def msg(message: types.Message):
#     if '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ  —Å–µ–±–µ' in message.text.lower() :
#         await message.reply('–Ø –±—ã–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞ –≤ –º–∞–µ 2024 –≥–æ–¥–∞. –ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –Ω–∞—á–∏–Ω–∞—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∏ –Ω–∞ –º–µ–Ω—è –æ–Ω —Ç—Ä–∞—Ç–∏–ª —Å–≤–æ–µ –¥—Ä–∞–≥–∞—Ü–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è... –•–æ—Ç—è –º–æ–≥ –±—ã –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å, –ø–æ—Å–ª–µ —Ç—è–∂–µ–ª–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –Ω–∞ –∑–∞–≤–æ–¥–µ')
#         await asyncio.sleep(2)
#         await message.reply('–ú–æ–π –∫–æ–¥ –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python. –û—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–ª—å—é –º–æ–µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª—É–∂–∏–ª–∞ –∏—Ç–æ–≥–æ–≤–∞—è –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —á–∞—Ç-–±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ.')
#         await asyncio.sleep(1)
#         await message.reply('–í –ø—Ä–∏–Ω—Ü–∏–ø–µ –Ω–∞–≤–µ—Ä–Ω–æ–µ —ç—Ç–æ –≤—Å–µ, —á—Ç–æ —è —Ö–æ—Ç–µ–ª–∞ –±—ã –Ω–∞–ø–∏—Å–∞—Ç—å. –ü–µ—Ä–µ–π–¥–µ–º –∫ –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º?)', reply_markup=keyboards.keyboard2)
#     elif '–ø–µ—Ä–µ–π–¥–µ–º –∫ —Ñ—É–Ω–∫—Ü–∏—è–º' in message.text.lower() :
#         await message.reply('–Ø –º–æ–≥—É —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –≤—Å–µ –∂–µ:','1. –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç)','2. –ú–æ–≥—É —Å–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è','3. –ú–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ','4. –ú–æ–≥—É —Å–∫–∏–Ω—É—Ç—å —Å–º–µ—à–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É', end='\n')
#         await asyncio.sleep(2)
#         await message.reply(reply_markup=keyboards.keyboard3)

    # elif '—Å–ø–æ–∫–∏' in message.text.lower() :
    #     await message.reply('–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤! <3')
    # elif '–ø–æ–∫–∞' in message.text.lower() :
    #     await message.reply('–ü–æ–∫–∞-–ø–æ–∫–∞! –î–æ —Å–∫–æ—Ä–æ–≥–æ! <3')
    # else :
    #     await message.reply('–ù–µ –ø–æ–Ω–∏–º–∞—é')
